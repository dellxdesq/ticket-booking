version: '3.8'

services:
  #rabbitmq:
  #  image: "rabbitmq:3-management"
  #  container_name: "rabbitmq"
  #  restart: always
  #  ports:
  #    - "5672:5672"   # Порт для работы с очередями
  #    - "15672:15672" # Порт для веб-интерфейса управления RabbitMQ
  #  environment:
  #    RABBITMQ_DEFAULT_USER: guest
  #    RABBITMQ_DEFAULT_PASS: guest
  #  networks:
  #    - app_network

  main_service:
    build:
      context: ./main_service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
      - order_service
      - notifications
      - auth_service
    env_file:
      - main_service/.env
    networks:
      - backend

  auth_service:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    ports:
      - "50053:50053"
    depends_on:
      - db
    env_file:
      - auth_service/.env
    networks:
      - backend

  order_service:
    build:
      context: ./order_service
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      - db
    env_file:
      - order_service/.env
    networks:
      - backend

  notifications:
    build:
      context: ./notifications
      dockerfile: Dockerfile
    ports:
      - "50052:50052"
    depends_on:
      - db
    env_file:
      - notifications/.env
    networks:
      - backend

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: afishadb
      TZ: "Asia/Yekaterinburg"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

networks:
  backend:
  app_network:

volumes:
  pgdata:
    driver: local
    driver_opts:
      type: none
      device: ./data/postgres
      o: bind